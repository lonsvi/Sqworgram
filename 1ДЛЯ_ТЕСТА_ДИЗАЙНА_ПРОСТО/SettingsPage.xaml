<Page x:Class="_1ДЛЯ_ТЕСТА_ДИЗАЙНА_ПРОСТО.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d"
      Title="SettingsPage" d:DesignHeight="600" d:DesignWidth="1000">

    <Page.Resources>
        <!-- ИЗМЕНЕНИЕ: Все локальные цвета и стили удалены -->

        <!-- Стили контролов -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource AccentColorBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseButton" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="14,12"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundColor}"/>
        </Style>

        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlBackgroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernToggleSwitch" TargetType="ToggleButton">
            <Setter Property="Width" Value="52"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="BackgroundBorder" CornerRadius="16" Background="{DynamicResource ControlBackgroundColor}" BorderBrush="#44FFFFFF" BorderThickness="1">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource AccentColorValue}" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform" Storyboard.TargetProperty="X" To="20" Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource ControlBackgroundColor}}" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="Thumb" Fill="White" Width="24" Height="24" HorizontalAlignment="Left" Margin="3">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="ThumbTransform" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стили для кастомного скроллбара -->
        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="#668A9BAB" x:Name="thumbBorder" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#AA8A9BAB" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#DD8A9BAB" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid>
                                    <Track Name="PART_Track" IsDirectionReversed="true">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>

    <Grid Background="{DynamicResource PrimaryBackgroundColor}">
        <Button x:Name="BackButton" Style="{StaticResource IconButton}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15" Click="BackToChats_Click" Panel.ZIndex="1">
            <Path Data="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Stretch="Uniform" Width="20"/>
        </Button>

        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <Border x:Name="SettingsPanel" Background="{DynamicResource SecondaryBackgroundColor}" CornerRadius="20" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="450" Margin="0,30" d:Opacity="1">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.4"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,60,0,0" To="0,30" Duration="0:0:0.4">
                                            <ThicknessAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="0.4" BlurRadius="30"/>
                </Border.Effect>

                <StackPanel Margin="30">
                    <TextBlock Text="Настройки" FontSize="24" FontWeight="Bold" Foreground="{DynamicResource PrimaryTextColor}" HorizontalAlignment="Center" Margin="0,0,0,25"/>
                    <TextBlock Text="Профиль" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" FontWeight="SemiBold" Margin="0,0,0,10" Opacity="0.5"/>

                    <Border CornerRadius="10" Background="{DynamicResource ControlBackgroundColor}" Padding="15">
                        <StackPanel>
                            <Border Width="100" Height="100" CornerRadius="50" HorizontalAlignment="Center" Margin="0,0,0,15">
                                <Border.Background>
                                    <SolidColorBrush Color="#FF444444"/>
                                </Border.Background>
                                <Image x:Name="AvatarImage" Stretch="UniformToFill">
                                    <Image.Clip>
                                        <EllipseGeometry RadiusX="50" RadiusY="50" Center="50,50"/>
                                    </Image.Clip>
                                </Image>
                            </Border>
                            <TextBlock x:Name="UserLoginTextBlock" Foreground="{DynamicResource PrimaryTextColor}" TextAlignment="Center" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,20"/>
                            <TextBlock Text="URL аватара" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" Margin="0,0,0,5"/>
                            <TextBox x:Name="AvatarUrlTextBox" Style="{StaticResource ModernTextBox}" Margin="0,0,0,15"/>
                            <Button Content="Сохранить аватар" Style="{StaticResource PrimaryButton}" Click="SaveAvatarUrl_Click"/>
                        </StackPanel>
                    </Border>

                    <TextBlock Text="Внешний вид" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" FontWeight="SemiBold" Margin="0,25,0,10" Opacity="0.5"/>
                    <Button Content="Настроить тему чата" Style="{StaticResource SecondaryButton}" Click="ThemeSettings_Click"/>

                    <TextBlock Text="Производительность" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" FontWeight="SemiBold" Margin="0,25,0,10" Opacity="0.5"/>
                    <Border CornerRadius="10" Background="{DynamicResource ControlBackgroundColor}" Padding="15">
                        <StackPanel>
                            <Grid Margin="0,0,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" VerticalAlignment="Center">
                                    <TextBlock Text="Анимация фона" Foreground="{DynamicResource PrimaryTextColor}"/>
                                    <TextBlock Text="Плавная анимация на фоне" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12"/>
                                </StackPanel>
                                <ToggleButton x:Name="AnimationToggle" Grid.Column="1" Style="{StaticResource ModernToggleSwitch}" Checked="AnimationToggle_Changed" Unchecked="AnimationToggle_Changed"/>
                            </Grid>
                            <Separator Margin="0,5" Background="#44FFFFFF"/>
                            <Grid Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" VerticalAlignment="Center">
                                    <TextBlock Text="Эффект 'стекла'" Foreground="{DynamicResource PrimaryTextColor}"/>
                                    <TextBlock Text="Полупрозрачные элементы интерфейса" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12"/>
                                </StackPanel>
                                <ToggleButton x:Name="GlassToggle" Grid.Column="1" Style="{StaticResource ModernToggleSwitch}" Checked="GlassToggle_Changed" Unchecked="GlassToggle_Changed"/>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <Button Content="Выйти из аккаунта" Style="{StaticResource SecondaryButton}" Margin="0,25,0,0" Click="Logout_Click"/>
                </StackPanel>
            </Border>
        </ScrollViewer>
    </Grid>
</Page>

